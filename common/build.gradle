architectury {
    common(rootProject.enabled_platforms.split(","))
}

String getConfig(String key) {
    return project.getParent().properties.get(key)
}

def mod_id = getConfig("mod_id")
def minecraft_version = getConfig("minecraft_version")
def fabric_loader_version = getConfig("fabric_loader_version")
def jei_version = getConfig("jei_version")
def rei_version = getConfig("rei_version")
def kjs_version = getConfig("kjs_version")
def emi_version = getConfig("emi_version")


loom {
    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
}

repositories {
    // mavens for Create Fabric and dependencies
    maven { url = "https://api.modrinth.com/maven" } // LazyDFU
    maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
    maven { url = "https://mvn.devos.one/snapshots/" } // Create Fabric, Porting Lib, Forge Tags, Milk Lib, Registrate Fabric
    maven { url = "https://cursemaven.com" } // Forge Config API Port
    maven { url = "https://maven.cafeteria.dev/releases" } // Fake Player API
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
    maven {
        // saps.dev Maven (KubeJS and Rhino)
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation("net.fabricmc:fabric-loader:${fabric_loader_version}")

    // JEI
    modCompileOnly("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    modCompileOnly("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
    modCompileOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")

    // REI
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${rei_version}")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:${rei_version}")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}")

    // EMI
    modCompileOnly("dev.emi:emi:${emi_version}:api")
    modCompileOnly("dev.emi:emi:${emi_version}")

    // KJS
    modCompileOnly("dev.latvian.mods:kubejs-fabric:${kjs_version}")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        maven {
            url "https://maven.pkg.github.com/GregTechCEu/GregTechLib-1.19"
            credentials {
                username System.getenv("GITHUB_ACTOR")
                password System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
